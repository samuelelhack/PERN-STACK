{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samue\\\\OneDrive\\\\Desktop\\\\PERN-STACK\\\\client\\\\src\\\\components\\\\CrearUsuario.js\",\n  _s = $RefreshSig$();\nimport { Button, Card, CardContent, Grid2, TextField, Typography, MenuItem, Select, FormControl, InputLabel } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport { createRequestHandler } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CrearUsuario() {\n  _s();\n  const [valores, setValores] = useState({\n    nombre: '',\n    correo: '',\n    rol: '',\n    clave: ''\n  });\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const respuesta = await fetch('http://localhost:4000/tareas', {\n      method: 'POST',\n      body: JSON.stringify(valores),\n      // lo que hacemos es transformas los datos en un string \n      headers: {\n        \"Content-Type\": \"application/json\"\n      } //esto se hace para que sepa que es un objeto json\n    });\n    const data = await respuesta.json();\n    console.log(data);\n    navigate('/');\n  };\n  const handleChange = e => setValores({\n    ...valores,\n    [e.target.name]: e.target.value\n  });\n  return /*#__PURE__*/_jsxDEV(Grid2, {\n    container: true,\n    direction: \"colum\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Grid2, {\n      item: true,\n      xs: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mt: 5\n        },\n        style: {\n          backgroundColor: '#1e272e',\n          padding: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"5\",\n          textAlign: \"center\",\n          color: \"white\",\n          children: \"Crear un Usuario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"filled\",\n              label: \"Nombre\",\n              sx: {\n                display: \"block\",\n                margin: '.5rem 0'\n              },\n              name: \"nombre\",\n              onChange: handleChange,\n              slotProps: {\n                htmlInput: {\n                  maxLength: 10,\n                  // Limita la entrada a 10 caracteres\n                  style: {\n                    color: 'white'\n                  } // Personaliza el estilo del input\n                },\n                inputLabel: {\n                  style: {\n                    color: 'white'\n                  } // Personaliza el estilo de la etiqueta\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"filled\",\n              label: \"Correo\",\n              sx: {\n                display: \"block\",\n                margin: '.5rem 0'\n              },\n              name: \"correo\",\n              onChange: handleChange,\n              slotProps: {\n                htmlInput: {\n                  maxLength: 10,\n                  // Limita la entrada a 10 caracteres\n                  style: {\n                    color: 'white'\n                  } // Personaliza el estilo del input\n                },\n                inputLabel: {\n                  style: {\n                    color: 'white'\n                  } // Personaliza el estilo de la etiqueta\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              variant: \"filled\",\n              sx: {\n                margin: '.5rem 0'\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"rol-label\",\n                sx: {\n                  color: 'white'\n                },\n                children: \"Rol\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"rol-label\",\n                id: \"rol\",\n                name: \"rol\",\n                onChange: handleChange,\n                sx: {\n                  color: 'white',\n                  // Color del texto seleccionado\n                  '& .MuiSelect-icon': {\n                    color: 'white'\n                  } // Color del Ã­cono del select\n                },\n                children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"analista\",\n                  children: \"Analista\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"filled\",\n              label: \"Clave\"\n\n              //multiline\n              //rows={4}\n              ,\n\n              sx: {\n                display: \"block\",\n                margin: '.5rem 0'\n              },\n              name: \"clave\",\n              onChange: handleChange,\n              slotProps: {\n                htmlInput: {\n                  //maxLength: 10, // Limita la entrada a 10 caracteres\n                  style: {\n                    color: 'white'\n                  } // Personaliza el estilo del input\n                },\n                inputLabel: {\n                  style: {\n                    color: 'white'\n                  } // Personaliza el estilo de la etiqueta\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              type: \"submit\",\n              children: \"Guardar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(CrearUsuario, \"iEAGxBmPgDnOk9P90PKDeSMnRLE=\", false, function () {\n  return [useNavigate];\n});\n_c = CrearUsuario;\nexport default CrearUsuario;\nvar _c;\n$RefreshReg$(_c, \"CrearUsuario\");","map":{"version":3,"names":["Button","Card","CardContent","Grid2","TextField","Typography","MenuItem","Select","FormControl","InputLabel","useState","useEffect","createRequestHandler","useNavigate","jsxDEV","_jsxDEV","CrearUsuario","_s","valores","setValores","nombre","correo","rol","clave","navigate","handleSubmit","e","preventDefault","respuesta","fetch","method","body","JSON","stringify","headers","data","json","console","log","handleChange","target","name","value","container","direction","alignItems","justifyContent","children","item","xs","sx","mt","style","backgroundColor","padding","variant","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","display","margin","onChange","slotProps","htmlInput","maxLength","inputLabel","fullWidth","id","labelId","type","_c","$RefreshReg$"],"sources":["C:/Users/samue/OneDrive/Desktop/PERN-STACK/client/src/components/CrearUsuario.js"],"sourcesContent":["import { Button, Card, CardContent, Grid2, TextField, Typography, MenuItem, Select, FormControl, InputLabel } from \"@mui/material\"\r\nimport { useState, useEffect } from \"react\";\r\nimport { createRequestHandler } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction CrearUsuario() {\r\n\r\n  const [valores, setValores] = useState({\r\n    nombre: '',\r\n    correo: '',\r\n    rol: '',\r\n    clave: ''\r\n  })\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const handleSubmit = async (e) =>{\r\n    e.preventDefault();\r\n    const respuesta = await fetch('http://localhost:4000/tareas', {\r\n      method: 'POST',\r\n      body: JSON.stringify(valores), // lo que hacemos es transformas los datos en un string \r\n      headers: {\"Content-Type\": \"application/json\"}, //esto se hace para que sepa que es un objeto json\r\n    }) \r\n    const data = await respuesta.json();\r\n    console.log(data);\r\n\r\n    navigate('/')\r\n    };\r\n\r\n  const handleChange = (e) => \r\n    setValores({...valores, [e.target.name]: e.target.value});\r\n  \r\n\r\n  return (\r\n    <Grid2 container direction=\"colum\" alignItems='center' justifyContent='center'>\r\n      <Grid2 item xs={3}>\r\n        <Card sx={{mt: 5}} style={{\r\n          backgroundColor: '#1e272e',\r\n          padding: \"1rem\"\r\n        }}>\r\n          <Typography variant=\"5\" textAlign=\"center\" color=\"white\">\r\n            Crear un Usuario\r\n          </Typography>\r\n\r\n          <CardContent> {/** par acolocar elementos dentro de la tarjeta */}\r\n            <form onSubmit={handleSubmit}>\r\n\r\n              <TextField  \r\n              variant='filled' \r\n              label=\"Nombre\"\r\n              \r\n              sx={{\r\n                display: \"block\",\r\n                margin: '.5rem 0'\r\n              }}\r\n\r\n              name = 'nombre'\r\n              onChange={handleChange}\r\n\r\n              slotProps={{\r\n                htmlInput: {\r\n                  maxLength: 10, // Limita la entrada a 10 caracteres\r\n                  style: { color: 'white' }, // Personaliza el estilo del input\r\n                },\r\n                inputLabel: {\r\n                  style: { color: 'white' }, // Personaliza el estilo de la etiqueta\r\n                },\r\n              }}\r\n\r\n              />{/**es un input etsos reciben algun valor un nombre, etc  */} \r\n              \r\n              <TextField \r\n              variant=\"filled\" \r\n              label='Correo'\r\n              \r\n              sx={{\r\n                display: \"block\",\r\n                margin: '.5rem 0'\r\n              }}\r\n              name = 'correo'\r\n              onChange={handleChange}\r\n\r\n              slotProps={{\r\n                htmlInput: {\r\n                  maxLength: 10, // Limita la entrada a 10 caracteres\r\n                  style: { color: 'white' }, // Personaliza el estilo del input\r\n                },\r\n                inputLabel: {\r\n                  style: { color: 'white' }, // Personaliza el estilo de la etiqueta\r\n                },\r\n              }}\r\n\r\n              />\r\n\r\n            <FormControl fullWidth variant=\"filled\" sx={{ margin: '.5rem 0' }}>\r\n              <InputLabel id=\"rol-label\" sx={{ color: 'white' }}>Rol</InputLabel>\r\n              <Select\r\n                labelId=\"rol-label\"\r\n                id=\"rol\"\r\n                name=\"rol\"\r\n                onChange={handleChange}\r\n                sx={{\r\n                  color: 'white', // Color del texto seleccionado\r\n                  '& .MuiSelect-icon': { color: 'white' }, // Color del Ã­cono del select\r\n                }}\r\n              >\r\n                <MenuItem value=\"analista\">Analista</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n\r\n              <TextField  \r\n              variant='filled' \r\n              label=\"Clave\"\r\n              \r\n              //multiline\r\n             //rows={4}\r\n\r\n              sx={{\r\n                display: \"block\",\r\n                margin: '.5rem 0'\r\n              }}\r\n\r\n              name = 'clave'\r\n              onChange={handleChange}\r\n\r\n              slotProps={{\r\n                htmlInput: {\r\n                  //maxLength: 10, // Limita la entrada a 10 caracteres\r\n                  style: { color: 'white' }, // Personaliza el estilo del input\r\n                },\r\n                inputLabel: {\r\n                  style: { color: 'white' }, // Personaliza el estilo de la etiqueta\r\n                },\r\n              }}\r\n              />\r\n\r\n              <Button\r\n              variant=\"contained\" \r\n              color=\"primary\" \r\n              type=\"submit\"\r\n              >\r\n                Guardar\r\n              </Button>\r\n            </form>\r\n          </CardContent> \r\n        </Card>\r\n      </Grid2>\r\n    </Grid2>\r\n  )\r\n}\r\n\r\nexport default CrearUsuario"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}